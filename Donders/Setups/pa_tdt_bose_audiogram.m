function [fl,tl,fr,tr] = pa_tdt_bose_audiogram(datfileleft,datfileright,calfile,method)
% PA_TDT_BOSE_AUDIOGRAM
%
% Plot pure-tone audiogram
%
% See also AUDIOGRAM, PA_PLOT_BOSE_QC2_CALIBRATION, PA_BOSE_QC2_CALIBRATION

% 2013 Marc van Wanrooij
% Calibration performed by Michiel Dirkx, Maarten van de Kraan

%% Initialization
close all hidden
% clc
if nargin<2
	datfileleft = 'E:\DATA\TDT Audiogram\MD-22-01-13.mat';
	datfileleft = 'E:\DATA\Audiogram\maartenleft.mat';
	datfileright = 'E:\DATA\Audiogram\maartenright.mat';
	
		datfileleft = 'E:\DATA\TDT Audiogram\sub19_leftear.mat';
		datfileright = 'E:\DATA\TDT Audiogram\sub19_rightear.mat';
end
if nargin<3
	calfile = 'bosecal.mat'; % The calibration file of the Bose QC-2. This
	% was measured by the Bruel&Kjaer microphone in the Kemar head. Pure
	% tones were delivered through audiogram.m by TDT RP2.1 at several
	% attenuations provided by the PA4. The dBA values were recorded.
	% This file is generated by
end
if nargin<4
	method = []; % change dBA to dB HL
% 		method = 4;
end

%% average
figure(666)
avgfile = 'audioavg.mat';
d		= which(avgfile);
load(d); % yields calleft- and calright-structure
semilogx(F,y(3,:)-y(1,:),'k-','LineWidth',2,'Color',[.7 .7 .7]);
hold on
semilogx(F,y(1,:)-y(1,:),'k-','LineWidth',2,'Color',[.7 .7 .7]);
semilogx(F,y(2,:)-y(1,:),'k:','LineWidth',2,'Color',[.7 .7 .7]);

%%
d = which(calfile);
load(d); % yields calleft- and calright-structure


%% Left
try
	load(datfileleft);
	cal = calleft;
	[fl,tl,hl] = getaudio(Result,cal,method,'b',y(1,:));
	lstr = 'Left';
catch me
	lstr = []; %#ok<NASGU>
	rethrow(me);
	fl = [];
	tl = [];
	hl = [];
end

try
	load(datfileright);
	cal = calright;
	[fr,tr,hr] = getaudio(Result,cal,method,'r',y(1,:));
	if isempty(lstr)
		lstr = 'Right';
	else
		lstr = {lstr;'Right'};
	end
catch me
	rethrow(me);
	fr = [];
	tr = [];
	hr = [];
end
h = [hl,hr];
legend(h,lstr,'Location','SW')
% pa_horline(0);

% errorbar(F,y(2,:),y(2,:)-y(1,:),y(3,:)-y(2,:),'k-','MarkerFaceColor','w','LineWidth',2,'Color',[.7 .7 .7]);
% if ~isempty(method)
% 	ylabel('Threshold (dB HL)');
% else
% 	ylabel('Threshold (dBA)');
% end
ylabel('Threshold (dB nHL)');

%%
pa_datadir;
[~,name] = fileparts(datfileleft);
print('-depsc','-painter',[mfilename name(1:4)]);

function [f,t,h] = getaudio(Result,cal,method,col,low)
f = Result.freq;
x = Result.plt;
if nargin<5
	low = zeros(size(f));
end
% figure
% semilogx(f,x,'ko-')
%% Calibrate
[freq,ia,ib] = intersect(cal.freq,f);
mu			= cal.mu;
mu			= mu(ia);
x			= x(ib);
t			= x*cal.beta(2)+cal.beta(1)+mu; % threshold calibrated to dBA
[f,indx]	= sort(freq);
t			= t(indx);

if ~isempty(method)
	t			= pa_dba2dbhl(t,f,method); % convert dBA 2 dB HL
end

%% Graph

hold on
h = semilogx(f,t-low,'ko-','MarkerFaceColor',col,'LineWidth',2,'Color','k','MarkerSize',8);
hold on
box off
axis square;
freq = unique(freq);
mn = min(freq);
mx = max(freq);
xlim([pa_oct2bw(mn,-0.5),pa_oct2bw(mx,0.5)]);
set(gca,'XTick',freq,'XTickLabel',freq/1000);
xlabel('Frequency (kHz)');
ylim([-10 80]);
set(gca,'YDir','reverse');

