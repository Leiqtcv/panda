ARM COMPILER V2.11,  i2cFart                                                               08/06/11  15:08:37  PAGE 1   


ARM COMPILER V2.11, COMPILATION OF MODULE i2cFart
OBJECT MODULE PLACED IN i2cFart.OBJ
COMPILER INVOKED BY: C:\Keil\ARM\BIN\CA.exe i2cFart.c THUMB BROWSE TABS(4) 

stmt  level    source

    1          /***************************************************************************
    2                                      i2cFart
    3          ****************************************************************************/
    4          #include <lpc21xx.h>
    5          #include <stdio.h>
    6          #include <inttypes.h>
    7          
    8          #include "i2cFart.h"
    9          #include "Config.h"
   10          #include "serial.h"
   11          #include "i2c.h"
   12          
   13          
   14          
   15          int main (void)
   16          {
   17   1          char inBuf[82]; 
   18   1          char err[2];    
   19   1          char ans[2];    
   20   1          int Buf[4];
   21   1          int pnt; 
   22   1          int inChar;
   23   1          int address = 0;
   24   1          int num   = 0;
   25   1          InitAll();
   26   1          ans[0] = '*';
   27   1          ans[1] = 13;
   28   1          err[0] = 'E';
   29   1          err[1] = 13;
   30   1          pnt = 0;
   31   1          ClrBitsPar(0x01);
   32   1          for (;;)
   33   1          {
   34   2              while (UART0_RxNumber() > 0)
   35   2              {
   36   3                  inChar = UART0_Get();
   37   3                  if (inChar == ENTER)
   38   3                  {
   39   4                      SetBitsPar(0x01);
   40   4                      inBuf[pnt] = 0;
   41   4                      pnt = 0;
   42   4                      sscanf(inBuf,"%d %d %d %d %d %d",&address,&num,&Buf[0],&Buf[1],&Buf[2],&Buf[3]);
   43   4                      if (I2C_SendByte(address,num,Buf) == 0)
   44   4                          UART0_Str(err,2);
   45   4                      else
   46   4                          UART0_Str(ans,2);
   47   4                  }
   48   3                  else
   49   3                      inBuf[pnt++] = (char) inChar;
   50   3              }
   51   2          }
   52   1          return 0;
   53   1      }
   54          /* *********************************************************************************** */
   55          int InitAll()
   56          {
   57   1          LPCinit();
   58   1          IODIR0  = 0x00000FF0;   // P0.4-P0.11 as output bit 0..7
   59   1                                  // PO.18-P0.25 as input bit 0..7
ARM COMPILER V2.11,  i2cFart                                                               08/06/11  15:08:37  PAGE 2   

   60   1          IOSET0 |= 0x00000FF0;   // LED off 
   61   1      
   62   1      
   63   1      //  Clock_Init();           // interrupt 0                         
   64   1          I2C_Init();             // interrupt 1
   65   1          UART0_Init();           // interrupt 2
   66   1      
   67   1          return(0);
   68   1      }
   69          
   70          void SetBitsPar(int i)
   71          {
   72   1          IOSET0 = (i & 0xFF) << 4;          
   73   1      }
   74          
   75          
   76          void ClrBitsPar(int i)
   77          {
   78   1          IOCLR0 = (i & 0xFF) << 4;
   79   1      }
   80          /*
   81          int GetBitsPar(void)
   82          {
   83              int i;
   84              i = (IOPIN0 >> 17) & 0x00FF;
   85              return i;
   86          }
   87          
   88          int TstBitPar(int bit)
   89          {
   90              int i;
   91              i = GetBitsPar();
   92              i = (i & bit);
   93          
   94              return i;
   95          }
   96          */
ARM COMPILER V2.11,  i2cFart                                                               08/06/11  15:08:37  PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE



*** EXTERNALS:
 EXTERN CODE16 (sscanf?T)
 EXTERN CODE16 (LPCinit?T)
 EXTERN CODE16 (UART0_Init?T)
 EXTERN CODE16 (UART0_RxNumber?T)
 EXTERN CODE16 (UART0_Get?T)
 EXTERN CODE16 (UART0_Str?T)
 EXTERN CODE16 (I2C_Init?T)
 EXTERN CODE16 (I2C_SendByte?T)
 EXTERN NUMBER (__startup)



*** PUBLICS:
 PUBLIC         InitAll?T
 PUBLIC         ClrBitsPar?T
 PUBLIC         SetBitsPar?T
 PUBLIC         main



*** DATA SEGMENT '?CON?i2cFart':
 00000000          ??S_1:
 00000000            DB          '%d %d %d %d %d %d',0x00

*** CODE SEGMENT '?PR?main?i2cFart':
   15: int main (void)
 00000000  B500      PUSH        {LR}
 00000002  B09D      SUB         R13,#0x74
   16: {
 00000004            ; SCOPE-START
   23:     int address = 0;
 00000004  2000      MOV         R0,#0x0
 00000006  901B      STR         R0,[R13,#0x6C] ; address
   24:     int num   = 0;
 00000008  2000      MOV         R0,#0x0
 0000000A  901C      STR         R0,[R13,#0x70] ; num
   25:     InitAll();
 0000000C  F7FF      BL          InitAll?T  ; T=0x0001  (1)
 0000000E  FFF8      BL          InitAll?T  ; T=0x0001  (2)
   26:     ans[0] = '*';
 00000010  212A      MOV         R1,#0x2A
 00000012  A816      ADD         R0,R13,#0x58
 00000014  7001      STRB        R1,[R0,#0x0] ; ans
   27:     ans[1] = 13;
 00000016  210D      MOV         R1,#0xD
 00000018  2059      MOV         R0,#0x59
 0000001A  4468      ADD         R0,R13
 0000001C  7001      STRB        R1,[R0,#0x0] ; ans+1
   28:     err[0] = 'E';
 0000001E  2145      MOV         R1,#0x45
 00000020  A815      ADD         R0,R13,#0x54
 00000022  7001      STRB        R1,[R0,#0x0] ; err
   29:     err[1] = 13;
 00000024  210D      MOV         R1,#0xD
 00000026  2055      MOV         R0,#0x55
 00000028  4468      ADD         R0,R13
 0000002A  7001      STRB        R1,[R0,#0x0] ; err+1
   30:     pnt = 0;
 0000002C  2400      MOV         R4,#0x0
 0000002E  ---- Variable 'pnt' assigned to Register 'R4' ----
   31:     ClrBitsPar(0x01);
 0000002E  2001      MOV         R0,#0x1
 00000030  F7FF      BL          ClrBitsPar?T  ; T=0x0001  (1)
 00000032  FFE6      BL          ClrBitsPar?T  ; T=0x0001  (2)
   34:         while (UART0_RxNumber() > 0)
 00000034          L_9:
 00000034  E031      B           L_6  ; T=0x0000009A
ARM COMPILER V2.11,  i2cFart                                                               08/06/11  15:08:37  PAGE 4   

 00000036          L_8:
   36:             inChar = UART0_Get();
 00000036  F7FF      BL          UART0_Get?T  ; T=0x0001  (1)
 00000038  FFE3      BL          UART0_Get?T  ; T=0x0001  (2)
 0000003A  0605      LSL         R5,R0,#0x18 ; UART0_Get?T
 0000003C  0E2D      LSR         R5,R5,#0x18
 0000003E  ---- Variable 'inChar' assigned to Register 'R5' ----
   37:              if (inChar == ENTER)
 0000003E  2D0D      CMP         R5,#0xD ; inChar
 00000040  D126      BNE         L_10  ; T=0x00000090
   39:                 SetBitsPar(0x01);
 00000042  2001      MOV         R0,#0x1
 00000044  F7FF      BL          SetBitsPar?T  ; T=0x0001  (1)
 00000046  FFDC      BL          SetBitsPar?T  ; T=0x0001  (2)
   40:                 inBuf[pnt] = 0;
 00000048  2000      MOV         R0,#0x0
 0000004A  A900      ADD         R1,R13,#0x0
 0000004C  5508      STRB        R0,[R1,R4]
   41:                 pnt = 0;
 0000004E  2400      MOV         R4,#0x0
   42:                 sscanf(inBuf,"%d %d %d %d %d %d",&address,&num,&Buf[0],&Buf[1],&Buf[2],&Buf[3]);
 00000050  A81A      ADD         R0,R13,#0x68
 00000052  B401      PUSH        {R0}
 00000054  A81A      ADD         R0,R13,#0x68
 00000056  B401      PUSH        {R0}
 00000058  A81A      ADD         R0,R13,#0x68
 0000005A  B401      PUSH        {R0}
 0000005C  A81A      ADD         R0,R13,#0x68
 0000005E  B401      PUSH        {R0}
 00000060  A804      ADD         R0,R13,#0x10
 00000062  4800      LDR         R1,=??S_1 ; ??S_1
 00000064  AA1F      ADD         R2,R13,#0x7C
 00000066  AB20      ADD         R3,R13,#0x80
 00000068  F7FF      BL          sscanf?T  ; T=0x0001  (1)
 0000006A  FFCA      BL          sscanf?T  ; T=0x0001  (2)
 0000006C  B004      ADD         R13,#0x10
   43:                 if (I2C_SendByte(address,num,Buf) == 0)
 0000006E  981B      LDR         R0,[R13,#0x6C] ; address
 00000070  991C      LDR         R1,[R13,#0x70] ; num
 00000072  AA17      ADD         R2,R13,#0x5C
 00000074  F7FF      BL          I2C_SendByte?T  ; T=0x0001  (1)
 00000076  FFC4      BL          I2C_SendByte?T  ; T=0x0001  (2)
 00000078  2800      CMP         R0,#0x0 ; I2C_SendByte?T
 0000007A  D104      BNE         L_11  ; T=0x00000086
   44:                     UART0_Str(err,2);
 0000007C  A815      ADD         R0,R13,#0x54
 0000007E  2102      MOV         R1,#0x2
 00000080  F7FF      BL          UART0_Str?T  ; T=0x0001  (1)
 00000082  FFBE      BL          UART0_Str?T  ; T=0x0001  (2)
 00000084  E009      B           L_6  ; T=0x0000009A
 00000086          L_11:
   46:                     UART0_Str(ans,2);
 00000086  A816      ADD         R0,R13,#0x58
 00000088  2102      MOV         R1,#0x2
 0000008A  F7FF      BL          UART0_Str?T  ; T=0x0001  (1)
 0000008C  FFB9      BL          UART0_Str?T  ; T=0x0001  (2)
   47:             }
 0000008E  E004      B           L_6  ; T=0x0000009A
 00000090          L_10:
   49:                 inBuf[pnt++] = (char) inChar;
 00000090  1C28      MOV         R0,R5 ; inChar
 00000092  1C22      MOV         R2,R4 ; pnt
 00000094  3401      ADD         R4,#0x1
 00000096  A900      ADD         R1,R13,#0x0
 00000098  5488      STRB        R0,[R1,R2]
   50:         }
ARM COMPILER V2.11,  i2cFart                                                               08/06/11  15:08:37  PAGE 5   

 0000009A          L_6:
 0000009A  F7FF      BL          UART0_RxNumber?T  ; T=0x0001  (1)
 0000009C  FFB1      BL          UART0_RxNumber?T  ; T=0x0001  (2)
 0000009E  0400      LSL         R0,R0,#0x10 ; UART0_RxNumber?T
 000000A0  0C00      LSR         R0,R0,#0x10
 000000A2  2800      CMP         R0,#0x0
 000000A4  D8C7      BHI         L_8  ; T=0x00000036
   51:     }
 000000A6  E7C5      B           L_9  ; T=0x00000034
 000000A8            ; SCOPE-END
 000000A8  B01D      ADD         R13,#0x74
 000000AA  BC08      POP         {R3}
 000000AC  4718      BX          R3
 000000AE          ENDP ; 'main'


*** CODE SEGMENT '?PR?InitAll?T?i2cFart':
   55: int InitAll()
 00000000  B500      PUSH        {LR}
   57:     LPCinit();
 00000002  F7FF      BL          LPCinit?T  ; T=0x0001  (1)
 00000004  FFFD      BL          LPCinit?T  ; T=0x0001  (2)
   58:     IODIR0  = 0x00000FF0;   // P0.4-P0.11 as output bit 0..7
 00000006  4800      LDR         R1,=0xFF0
 00000008  4800      LDR         R0,=0xE0028008
 0000000A  6001      STR         R1,[R0,#0x0]
   60:       IOSET0 |= 0x00000FF0; // LED off 
 0000000C  4800      LDR         R2,=0xFF0
 0000000E  4800      LDR         R0,=0xE0028004
 00000010  6801      LDR         R1,[R0,#0x0]
 00000012  4311      ORR         R1,R2
 00000014  6001      STR         R1,[R0,#0x0]
   64:     I2C_Init();             // interrupt 1
 00000016  F7FF      BL          I2C_Init?T  ; T=0x0001  (1)
 00000018  FFF3      BL          I2C_Init?T  ; T=0x0001  (2)
   65:     UART0_Init();           // interrupt 2
 0000001A  F7FF      BL          UART0_Init?T  ; T=0x0001  (1)
 0000001C  FFF1      BL          UART0_Init?T  ; T=0x0001  (2)
   67:     return(0);
 0000001E  2000      MOV         R0,#0x0
   68: }
 00000020  BC08      POP         {R3}
 00000022  4718      BX          R3
 00000024          ENDP ; 'InitAll?T'


*** CODE SEGMENT '?PR?SetBitsPar?T?i2cFart':
   70: void SetBitsPar(int i)
 00000000  ---- Variable 'i' assigned to Register 'R0' ----
   72:     IOSET0 = (i & 0xFF) << 4;          
 00000000  21FF      MOV         R1,#0xFF
 00000002  4001      AND         R1,R0 ; i
 00000004  0109      LSL         R1,R1,#0x4
 00000006  4800      LDR         R0,=0xE0028004
 00000008  6001      STR         R1,[R0,#0x0]
   73: }
 0000000A  4770      BX          R14
 0000000C          ENDP ; 'SetBitsPar?T'


*** CODE SEGMENT '?PR?ClrBitsPar?T?i2cFart':
   76: void ClrBitsPar(int i)
 00000000  ---- Variable 'i' assigned to Register 'R0' ----
   78:     IOCLR0 = (i & 0xFF) << 4;
 00000000  21FF      MOV         R1,#0xFF
 00000002  4001      AND         R1,R0 ; i
 00000004  0109      LSL         R1,R1,#0x4
 00000006  4800      LDR         R0,=0xE002800C
 00000008  6001      STR         R1,[R0,#0x0]
   79: }
 0000000A  4770      BX          R14
 0000000C          ENDP ; 'ClrBitsPar?T'

ARM COMPILER V2.11,  i2cFart                                                               08/06/11  15:08:37  PAGE 6   



Module Information          Static
----------------------------------
  code size            =    ------
  data size            =    ------
  const size           =        18
End of Module Information.


ARM COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
